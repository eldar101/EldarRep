Print K-smallest numbers in an array: 

Red Black Tree Operations

Built-in test arrays for n=200, n=400 or n=800. 
Choose k = -1 to stop the program 
Please enter k: 
10
Please enter n: 
200
	 The algorithm is now tested on an array of random integers:

[387,473,963,379,305,644,736,826,358,545,118,769,538,604,291,231,549,267,250,209,404,191,777,959,181,579,402,547,671,517,233,749,977,645,1010,753,562,815,730,483,1022,370,1,569,537,111,780,889,160,581,917,627,471,188,785,378,60,523,386,778,1004,378,213,1004,671,699,226,659,744,569,217,102,243,991,750,636,673,406,106,659,120,551,623,526,774,303,854,92,511,136,243,882,739,965,490,191,210,605,748,651,503,388,188,467,279,789,219,601,722,882,253,776,637,236,169,700,462,18,230,533,283,303,854,332,908,56,239,431,868,424,34,275,606,22,879,626,290,910,839,485,764,389,333,803,59,417,905,293,490,397,856,669,336,991,657,686,1011,43,264,687,755,107,354,432,287,620,549,37,879,521,753,569,640,965,539,327,509,479,18,319,77,198,136,278,332,724,211,471,653,532,946,636,577,562,121,889,997,971,651,962]

first check point:
 
In order : 1 111 118 160 181 191 209 231 233 250 

Second check point:
 
In order : 1 60 92 102 106 111 118 120 136 160 

Third check point:
 
In order : 1 18 22 34 56 59 60 92 102 106 

K-Smallest keys: 

In order : 1 18 18 22 34 37 43 56 59 60 

Number of Nodes = 10
Please enter k: 
50
Please enter n: 
400
	 The algorithm is now tested on an array of random integers:

[722,505,559,505,703,557,221,912,480,629,410,272,582,438,327,425,500,402,877,557,415,407,443,698,449,889,818,84,180,147,11,895,597,244,72,716,766,329,311,119,980,282,361,110,434,1011,798,106,686,223,691,574,937,144,315,282,36,994,884,312,647,391,506,586,520,807,459,1001,341,975,882,109,679,801,844,449,539,651,771,315,680,940,712,708,211,303,140,378,985,349,92,878,772,45,729,45,203,199,492,397,144,298,1018,128,529,296,820,964,746,201,273,169,801,268,387,673,332,256,581,258,416,95,81,723,287,16,139,944,784,126,217,383,799,269,976,510,440,966,969,71,648,15,319,461,692,798,320,996,189,257,563,586,11,272,34,280,195,284,399,58,683,737,786,151,766,4,521,786,316,323,519,1001,654,676,288,308,416,776,189,460,685,689,847,634,11,386,798,512,892,743,822,368,920,735,457,312,665,261,578,103,323,66,468,741,231,902,661,181,783,479,1010,959,1003,546,700,871,631,216,44,169,548,266,226,919,454,816,53,721,700,2,31,965,377,886,923,714,513,826,907,92,869,666,491,345,247,264,954,696,664,897,993,453,899,106,56,248,986,202,489,613,374,374,956,955,932,596,744,319,1005,411,689,67,896,263,925,865,363,715,164,521,433,98,930,734,3,398,604,59,769,588,565,4,518,764,816,57,932,702,505,960,659,175,304,889,265,441,965,466,100,412,228,5,899,777,434,665,589,1006,559,970,945,119,121,337,449,221,253,46,131,957,607,107,207,118,360,994,953,758,957,726,491,127,1012,650,990,738,594,499,253,583,893,570,889,920,382,255,510,157,907,51,629,297,658,943,673,954,678,788,931,689,341,715,350,607,335,466,293,865,472,646,324,998,833,926,961,510,465,856,764,147,425,546,494,95,141,797,87,485,479,60]

first check point:
 
In order : 11 36 45 45 72 84 92 106 109 110 119 140 144 144 147 180 199 203 211 221 223 244 272 282 282 303 311 312 315 315 327 329 341 349 361 378 391 397 402 407 410 415 425 434 438 443 449 449 459 480 

Second check point:
 
In order : 4 11 11 11 15 16 34 36 45 45 58 71 72 81 84 92 95 103 106 109 110 119 126 128 139 140 144 144 147 151 169 180 189 189 195 199 201 203 211 217 221 223 244 256 257 258 261 268 269 272 

Third check point:
 
In order : 2 3 4 4 11 11 11 15 16 31 34 36 44 45 45 53 56 57 58 59 66 67 71 72 81 84 92 92 95 98 103 106 106 109 110 119 126 128 139 140 144 144 147 151 164 169 169 180 181 189 

K-Smallest keys: 

In order : 2 3 4 4 5 11 11 11 15 16 31 34 36 44 45 45 46 51 53 56 57 58 59 60 66 67 71 72 81 84 87 92 92 95 95 98 100 103 106 106 107 109 110 118 119 119 121 126 127 128 

Number of Nodes = 50
Please enter k: 
100
Please enter n: 
800
	 The algorithm is now tested on an array of random integers:

[125,368,430,325,217,547,366,133,983,313,970,455,661,768,217,1010,415,870,286,951,974,119,1015,449,924,498,356,289,690,456,870,764,487,581,272,776,414,951,957,231,794,135,754,329,842,1022,60,635,659,371,642,783,834,755,880,600,384,91,480,451,19,375,424,850,185,956,968,276,386,551,414,753,580,11,638,1018,593,464,312,547,603,278,492,871,459,50,214,347,230,935,24,108,668,787,226,624,328,459,1020,155,336,676,595,888,866,337,17,109,467,828,939,735,438,263,625,96,104,373,302,517,381,562,515,673,870,671,990,165,685,199,136,8,54,160,6,73,706,488,738,15,732,308,187,15,556,305,424,175,143,416,829,509,342,585,287,973,670,205,427,56,789,334,208,256,44,727,437,331,892,399,981,880,519,545,264,986,734,805,1022,167,279,719,513,757,499,232,762,505,181,721,81,333,261,321,419,865,864,360,565,674,254,361,656,901,292,568,1010,922,582,909,534,435,30,228,35,332,588,357,729,912,134,821,143,710,416,428,781,324,669,221,39,976,397,42,918,995,483,202,969,305,264,153,796,730,499,280,118,941,474,544,70,547,638,933,660,34,1016,448,819,1022,179,578,751,981,472,844,867,516,379,657,776,369,436,369,36,576,257,654,879,948,161,570,688,549,202,962,951,92,339,698,553,545,734,54,177,591,376,321,638,392,343,267,655,890,404,679,121,932,695,994,416,907,54,62,513,945,123,245,304,467,625,223,718,636,569,247,326,411,129,158,666,370,185,703,218,287,628,938,770,997,366,445,809,140,457,473,56,73,944,827,974,805,474,353,165,30,537,377,570,504,516,79,169,624,871,151,573,66,363,307,150,387,854,609,61,737,305,134,2,402,195,765,182,273,804,347,682,852,898,373,959,424,925,204,1015,534,342,44,539,311,671,183,846,538,607,575,654,556,242,834,81,287,618,986,791,344,829,444,817,943,392,119,683,526,507,581,582,801,845,791,286,550,536,218,748,237,286,389,977,796,835,317,248,297,233,125,741,673,438,57,187,766,700,1009,879,468,612,978,224,697,148,842,114,876,385,735,553,602,184,688,307,537,34,391,68,599,51,874,148,342,773,318,975,343,917,593,527,5,327,940,695,689,406,85,510,250,753,282,272,107,974,541,973,733,78,968,402,631,794,213,459,393,983,736,469,527,471,777,797,52,445,85,890,200,914,444,411,183,187,603,91,71,612,666,552,285,347,490,233,74,883,363,804,463,342,205,239,453,253,934,432,923,534,714,945,744,321,589,849,483,559,617,455,190,710,760,681,545,696,718,917,54,834,554,736,807,619,316,205,345,928,479,607,829,353,444,468,109,123,106,650,371,359,875,370,454,887,153,790,875,952,509,448,536,737,302,164,475,530,738,141,502,487,678,825,773,502,440,96,95,228,860,592,889,528,94,49,252,535,770,263,600,666,86,262,1015,41,899,556,857,669,991,402,525,230,572,191,486,253,605,249,183,918,424,644,384,307,129,743,805,844,114,863,190,146,450,21,462,668,1014,268,288,508,431,856,854,783,315,985,769,761,140,124,672,967,89,536,492,508,969,740,688,941,872,207,653,721,997,832,583,144,745,354,149,777,542,87,471,408,687,214,962,335,405,27,950,117,853,582,97,900,86,824,822,424,317,830,118,149,462,542,129,339,796,402,1005,978,311,973,989,737,803,860,769,210,879,885,73,776,690,715,795,925,217,783,508,109,434,85,897,550,166,541,716,87,904,769,13,220,52,171,772,484,177,877,294,328,487,942,667,776,253,800,346,662,18,265,881,981,894,743,443,236,356,543,622,349,552,970,865]

first check point:
 
In order : 6 8 11 15 15 17 19 24 44 50 54 56 60 73 81 91 96 104 108 109 119 125 133 135 136 143 155 160 165 167 175 181 185 187 199 205 208 214 217 217 226 230 231 232 254 256 261 263 264 272 276 278 279 286 287 289 302 305 308 312 313 321 325 328 329 331 333 334 336 337 342 347 356 360 366 368 371 373 375 381 384 386 399 414 414 415 416 419 424 424 427 430 437 438 449 451 455 456 459 459 

Second check point:
 
In order : 2 6 8 11 15 15 17 19 24 30 30 34 35 36 39 42 44 44 50 54 54 54 56 56 60 61 62 66 70 73 73 79 81 91 92 96 104 108 109 118 119 121 123 125 129 133 134 134 135 136 140 143 143 150 151 153 155 158 160 161 165 165 167 169 175 177 179 181 182 185 185 187 195 199 202 202 204 205 208 214 217 217 218 221 223 226 228 230 231 232 245 247 254 256 257 261 263 264 264 267 

Third check point:
 
In order : 2 5 6 8 11 15 15 17 19 24 30 30 34 34 35 36 39 42 44 44 50 51 52 54 54 54 54 56 56 57 60 61 62 66 68 70 71 73 73 74 78 79 81 81 85 85 91 91 92 96 104 106 107 108 109 109 114 118 119 119 121 123 123 125 125 129 133 134 134 135 136 140 143 143 148 148 150 151 153 153 155 158 160 161 165 165 167 169 175 177 179 181 182 183 183 184 185 185 187 187 

K-Smallest keys: 

In order : 2 5 6 8 11 13 15 15 17 18 19 21 24 27 30 30 34 34 35 36 39 41 42 44 44 49 50 51 52 52 54 54 54 54 56 56 57 60 61 62 66 68 70 71 73 73 73 74 78 79 81 81 85 85 85 86 86 87 87 89 91 91 92 94 95 96 96 97 104 106 107 108 109 109 109 114 114 117 118 118 119 119 121 123 123 124 125 125 129 129 129 133 134 134 135 136 140 140 141 143 

Number of Nodes = 100
Please enter k: 
-1
Goodbye

Process finished with exit code 0
